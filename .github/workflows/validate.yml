name: Ansible Static Analysis

on:
  pull_request:
    branches:
      - 'master'

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Setup Ansible
        run: |
          python3 -m pip install --upgrade pip
          python3 -m venv venv
          source ./venv/bin/activate
          hash -r

          python3 -m pip install -r ./dependencies/dev-requirements.txt

      - name: Ansible Lint
        id: lint
        run: |
          source ./venv/bin/activate
          hash -r

          find . -maxdepth 1 -mindepth 1 \( -name '*.yml' -or -name '*.yaml' \) -print | xargs ansible-lint

  inventory:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Setup Ansible
        run: |
          python3 -m pip install --upgrade pip
          python3 -m venv venv
          source ./venv/bin/activate
          hash -r

          python3 -m pip install -r ./dependencies/requirements.txt
          hash -r

          ansible-galaxy install -r ./dependencies/requirements.yml

      - name: Ansible Inventory
        id: inventory
        run: |
          source ./venv/bin/activate
          hash -r

          printf '%s\n' "$SSH_KEY" > "$ANSIBLE_PRIVATE_KEY_FILE"
          chmod 600 ./private_key

          ansible -m ping all
        env:
          ANSIBLE_PRIVATE_KEY_FILE: './private_key'
          ANSIBLE_REMOTE_USER: ${{ secrets.GRAFEAS_REMOTE_USER }}
          LINODE_ACCESS_TOKEN: ${{ secrets.LINODE_API_KEY }}
          SSH_KEY: ${{ secrets.GRAFEAS_SSH_PRIVATE_KEY }}
